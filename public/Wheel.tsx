/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder002: THREE.Mesh
    Cylinder003: THREE.Mesh
  }
  materials: {
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.007']: THREE.MeshStandardMaterial
    ['Material.008']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/wheel.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials['Material.003']}
        rotation={[0, 0, 1.6]}
        scale={[1, 0.4, 1]}
      />
      <mesh
        geometry={nodes.Cylinder001.geometry}
        material={materials['Material.001']}
        position={[0.05, 0, -0.03]}
        rotation={[0, 0, 1.6]}
        scale={[0.45, 0.38, 0.45]}
      />
      <mesh
        geometry={nodes.Cylinder002.geometry}
        material={materials['Material.007']}
        position={[0.08, 0, 0]}
        rotation={[0, 0, 1.6]}
        scale={[0.23, 0.4, 0.23]}
      />
      <mesh
        geometry={nodes.Cylinder003.geometry}
        material={materials['Material.008']}
        position={[0.12, 0.12, -0.07]}
        rotation={[0, 0, 1.6]}
        scale={[0.05, 0.41, 0.05]}
      />
    </group>
  )
}

useGLTF.preload('/wheel.glb')
